====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	YARNRunner.java	methodSinagture:	org.apache.hadoop.mapred.YARNRunner.warnForJavaLibPath(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	methodLines:	1002:1010
blockLines:	1003:-1
paras:	null
TaintedStat:	NORMAL warnForJavaLibPath:conditional branch(eq, to iindex=28) 1,6 Node: < Application, Lorg/apache/hadoop/mapred/YARNRunner, warnForJavaLibPath(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/mapred/YARNRunner, setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List; > Context: Everywhere[112]89 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > 2,86,87 @247 exception:88
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/mapred/YARNRunner, setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List; > Context: Everywhere[112]89 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > 2,86,87 @247 exception:88
NORMAL setupAMCommand:conditional branch(eq, to iindex=141) 89,87 Node: < Application, Lorg/apache/hadoop/mapred/YARNRunner, setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List; > Context: Everywhere
NORMAL setupAMCommand:93 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 2,90,91 @258 exception:92 Node: < Application, Lorg/apache/hadoop/mapred/YARNRunner, setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List; > Context: Everywhere
METHOD_ENTRY:Node: < Extension, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere
NORMAL get:return 23 Node: < Extension, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere
NORMAL_RET_CALLEE:Node: < Extension, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere
NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/mapred/YARNRunner, setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List; > Context: Everywhere[47]46 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 42,43,44 @105 exception:45
PARAM_CALLER:Node: < Application, Lorg/apache/hadoop/mapred/YARNRunner, setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List; > Context: Everywhere[51]invokestatic < Application, Lorg/apache/hadoop/mapred/YARNRunner, warnForJavaLibPath(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V > 46,47,43,48 @114 exception:49 v46
PARAM_CALLEE:Node: < Application, Lorg/apache/hadoop/mapred/YARNRunner, warnForJavaLibPath(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V > Context: Everywhere v1
NORMAL warnForJavaLibPath:conditional branch(eq, to iindex=28) 1,6 Node: < Application, Lorg/apache/hadoop/mapred/YARNRunner, warnForJavaLibPath(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
      String javaConf, String envConf) {
    if (opts != null && opts.contains("-Djava.library.path")) {
      LOG.warn("Usage of -Djava.library.path in " + javaConf + " can cause " +
               "programs to no longer function if hadoop native libraries " +
               "are used. These values should be set as part of the " +
               "LD_LIBRARY_PATH in the " + component + " JVM env using " +
               envConf + " config settings.");
    }
  }



====================ctx:=======================
CtxCodeBlock{node=Node: < Application, Lorg/apache/hadoop/mapred/YARNRunner, setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List; > Context: Everywhere, blocks=[BB[SSA:48..51]24 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:45..47]23 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:52..53]25 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:-1..-2]60 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:57..60]27 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:54..56]26 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:61..62]28 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:-1..-2]60 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:66..69]30 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:63..65]29 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:70..71]31 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:-1..-2]60 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:75..78]33 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:72..74]32 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:79..80]34 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:-1..-2]60 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:84..89]36 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:81..83]35 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:90..92]37 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:-1..-2]60 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:99..104]40 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:96..98]39 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:105..107]41 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;, BB[SSA:-1..-2]60 - org.apache.hadoop.mapred.YARNRunner.setupAMCommand(Lorg/apache/hadoop/conf/Configuration;)Ljava/util/List;], numberOfBasicBlocks=24, firstLineNumber=482, lastLineNumber=486, firstMethodNumber=444, lastMethodNumber=504, isFirstLineValid=true, methodSrcCode=
  private List<String> setupAMCommand(Configuration jobConf) {
    List<String> vargs = new ArrayList<>(8);
    vargs.add(MRApps.crossPlatformifyMREnv(jobConf, Environment.JAVA_HOME)
        + "/bin/java");

    Path amTmpDir =
        new Path(MRApps.crossPlatformifyMREnv(conf, Environment.PWD),
            YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);
    vargs.add("-Djava.io.tmpdir=" + amTmpDir);
    MRApps.addLog4jSystemProperties(null, vargs, conf);

    // Check for Java Lib Path usage in MAP and REDUCE configs
    warnForJavaLibPath(conf.get(MRJobConfig.MAP_JAVA_OPTS, ""),
        "map",
        MRJobConfig.MAP_JAVA_OPTS,
        MRJobConfig.MAP_ENV);
    warnForJavaLibPath(conf.get(MRJobConfig.MAPRED_MAP_ADMIN_JAVA_OPTS, ""),
        "map",
        MRJobConfig.MAPRED_MAP_ADMIN_JAVA_OPTS,
        MRJobConfig.MAPRED_ADMIN_USER_ENV);
    warnForJavaLibPath(conf.get(MRJobConfig.REDUCE_JAVA_OPTS, ""),
        "reduce",
        MRJobConfig.REDUCE_JAVA_OPTS,
        MRJobConfig.REDUCE_ENV);
    warnForJavaLibPath(conf.get(MRJobConfig.MAPRED_REDUCE_ADMIN_JAVA_OPTS, ""),
        "reduce",
        MRJobConfig.MAPRED_REDUCE_ADMIN_JAVA_OPTS,
        MRJobConfig.MAPRED_ADMIN_USER_ENV);

    // Add AM admin command opts before user command opts
    // so that it can be overridden by user
    String mrAppMasterAdminOptions = conf.get(MRJobConfig.MR_AM_ADMIN_COMMAND_OPTS,
        MRJobConfig.DEFAULT_MR_AM_ADMIN_COMMAND_OPTS);
    warnForJavaLibPath(mrAppMasterAdminOptions, "app master",
        MRJobConfig.MR_AM_ADMIN_COMMAND_OPTS, MRJobConfig.MR_AM_ADMIN_USER_ENV);
    vargs.add(mrAppMasterAdminOptions);

    // Add AM user command opts
    String mrAppMasterUserOptions = conf.get(MRJobConfig.MR_AM_COMMAND_OPTS,
        MRJobConfig.DEFAULT_MR_AM_COMMAND_OPTS);
    warnForJavaLibPath(mrAppMasterUserOptions, "app master",
        MRJobConfig.MR_AM_COMMAND_OPTS, MRJobConfig.MR_AM_ENV);
    vargs.add(mrAppMasterUserOptions);

    if (jobConf.getBoolean(MRJobConfig.MR_AM_PROFILE,
        MRJobConfig.DEFAULT_MR_AM_PROFILE)) {
      final String profileParams = jobConf.get(MRJobConfig.MR_AM_PROFILE_PARAMS,
          MRJobConfig.DEFAULT_TASK_PROFILE_PARAMS);
      if (profileParams != null) {
        vargs.add(String.format(profileParams,
            ApplicationConstants.LOG_DIR_EXPANSION_VAR + Path.SEPARATOR
                + TaskLog.LogName.PROFILE));
      }
    }

    vargs.add(MRJobConfig.APPLICATION_MASTER_CLASS);
    vargs.add("1>" + ApplicationConstants.LOG_DIR_EXPANSION_VAR +
        Path.SEPARATOR + ApplicationConstants.STDOUT);
    vargs.add("2>" + ApplicationConstants.LOG_DIR_EXPANSION_VAR +
        Path.SEPARATOR + ApplicationConstants.STDERR);
    return vargs;
  }
}
