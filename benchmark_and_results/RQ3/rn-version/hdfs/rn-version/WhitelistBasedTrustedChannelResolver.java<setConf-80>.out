====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	WhitelistBasedTrustedChannelResolver.java	methodSinagture:	org.apache.hadoop.hdfs.protocol.datatransfer.WhitelistBasedTrustedChannelResolver.setConf(Lorg/apache/hadoop/conf/Configuration;)V	methodLines:	80:106
blockLines:	99:-1
paras:	null
TaintedStat:	NORMAL setConf:conditional branch(eq, to iindex=63) 34,12 Node: < Application, Lorg/apache/hadoop/hdfs/protocol/datatransfer/WhitelistBasedTrustedChannelResolver, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/hdfs/protocol/datatransfer/WhitelistBasedTrustedChannelResolver, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere[48]34 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > 2,32,12 @83 exception:33
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/hdfs/protocol/datatransfer/WhitelistBasedTrustedChannelResolver, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere[48]34 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > 2,32,12 @83 exception:33
NORMAL setConf:conditional branch(eq, to iindex=63) 34,12 Node: < Application, Lorg/apache/hadoop/hdfs/protocol/datatransfer/WhitelistBasedTrustedChannelResolver, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere

-------------TaintedSinkInfo----------
fileName:	WhitelistBasedTrustedChannelResolver.java	methodSinagture:	org.apache.hadoop.hdfs.protocol.datatransfer.WhitelistBasedTrustedChannelResolver.setConf(Lorg/apache/hadoop/conf/Configuration;)V	methodLines:	80:106
blockLines:	87:-1
paras:	null
TaintedStat:	NORMAL setConf:conditional branch(eq, to iindex=30) 14,12 Node: < Application, Lorg/apache/hadoop/hdfs/protocol/datatransfer/WhitelistBasedTrustedChannelResolver, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/hdfs/protocol/datatransfer/WhitelistBasedTrustedChannelResolver, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere[41]31 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 2,29,8 @72 exception:30
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/hdfs/protocol/datatransfer/WhitelistBasedTrustedChannelResolver, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere[41]31 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; > 2,29,8 @72 exception:30
NORMAL setConf:invokespecial < Application, Lorg/apache/hadoop/util/CombinedIPWhiteList, <init>(Ljava/lang/String;Ljava/lang/String;J)V > 44,31,42,43 @121 exception:45 Node: < Application, Lorg/apache/hadoop/hdfs/protocol/datatransfer/WhitelistBasedTrustedChannelResolver, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere
METHOD_ENTRY:Node: < Extension, Lorg/apache/hadoop/util/CombinedIPWhiteList, <init>(Ljava/lang/String;Ljava/lang/String;J)V > Context: Everywhere
NORMAL <init>:invokespecial < Extension, Lorg/apache/hadoop/util/FileBasedIPList, <init>(Ljava/lang/String;)V > 7,2 @9 exception:8 Node: < Extension, Lorg/apache/hadoop/util/CombinedIPWhiteList, <init>(Ljava/lang/String;Ljava/lang/String;J)V > Context: Everywhere
METHOD_ENTRY:Node: < Extension, Lorg/apache/hadoop/util/FileBasedIPList, <init>(Ljava/lang/String;)V > Context: Everywhere
NORMAL <init>:6 = invokestatic < Extension, Lorg/apache/hadoop/util/FileBasedIPList, readLines(Ljava/lang/String;)[Ljava/lang/String; > 2 @10 exception:5 Node: < Extension, Lorg/apache/hadoop/util/FileBasedIPList, <init>(Ljava/lang/String;)V > Context: Everywhere
METHOD_ENTRY:Node: < Extension, Lorg/apache/hadoop/util/FileBasedIPList, readLines(Ljava/lang/String;)[Ljava/lang/String; > Context: Everywhere
NORMAL readLines:conditional branch(eq, to iindex=166) 1,3 Node: < Extension, Lorg/apache/hadoop/util/FileBasedIPList, readLines(Ljava/lang/String;)[Ljava/lang/String; > Context: Everywhere
NORMAL readLines:conditional branch(eq, to iindex=156) 7,8 Node: < Extension, Lorg/apache/hadoop/util/FileBasedIPList, readLines(Ljava/lang/String;)[Ljava/lang/String; > Context: Everywhere
NORMAL readLines:18 = invokevirtual < Extension, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @347 exception:17 Node: < Extension, Lorg/apache/hadoop/util/FileBasedIPList, readLines(Ljava/lang/String;)[Ljava/lang/String; > Context: Everywhere
METHOD_ENTRY:Node: < Primordial, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > Context: Everywhere
NORMAL toString:return 14 Node: < Primordial, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > Context: Everywhere
NORMAL_RET_CALLEE:Node: < Primordial, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > Context: Everywhere
NORMAL_RET_CALLER:Node: < Extension, Lorg/apache/hadoop/ipc/Server, getClientBackoffEnable(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Z > Context: Everywhere[9]15 = invokevirtual < Extension, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @21 exception:14
NORMAL getClientBackoffEnable:18 = invokevirtual < Extension, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > 2,15,16 @28 exception:17 Node: < Extension, Lorg/apache/hadoop/ipc/Server, getClientBackoffEnable(Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)Z > Context: Everywhere
METHOD_ENTRY:Node: < Extension, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > Context: Everywhere
NORMAL getBoolean:conditional branch(eq, to iindex=11) 7,6 Node: < Extension, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > Context: Everywhere
NORMAL getBoolean:return 3 Node: < Extension, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > Context: Everywhere
NORMAL_RET_CALLEE:Node: < Extension, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > Context: Everywhere
NORMAL_RET_CALLER:Node: < Application, Lorg/apache/hadoop/hdfs/protocol/datatransfer/WhitelistBasedTrustedChannelResolver, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere[15]14 = invokevirtual < Application, Lorg/apache/hadoop/conf/Configuration, getBoolean(Ljava/lang/String;Z)Z > 2,11,12 @23 exception:13
NORMAL setConf:conditional branch(eq, to iindex=30) 14,12 Node: < Application, Lorg/apache/hadoop/hdfs/protocol/datatransfer/WhitelistBasedTrustedChannelResolver, setConf(Lorg/apache/hadoop/conf/Configuration;)V > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
  public void setConf(Configuration conf) {
    super.setConf(conf);
    String fixedFile = conf.get(DFS_DATATRANSFER_SERVER_FIXEDWHITELIST_FILE,
        FIXEDWHITELIST_DEFAULT_LOCATION);
    String variableFile = null;
    long expiryTime = 0;

    if (conf.getBoolean(DFS_DATATRANSFER_SERVER_VARIABLEWHITELIST_ENABLE, false)) {
      variableFile = conf.get(DFS_DATATRANSFER_SERVER_VARIABLEWHITELIST_FILE,
          VARIABLEWHITELIST_DEFAULT_LOCATION);
      expiryTime =
        conf.getLong(DFS_DATATRANSFER_SERVER_VARIABLEWHITELIST_CACHE_SECS,3600) * 1000;
    }

    whiteListForServer = new CombinedIPWhiteList(fixedFile,variableFile,expiryTime);

    fixedFile = conf.get(DFS_DATATRANSFER_CLIENT_FIXEDWHITELIST_FILE, fixedFile);
    expiryTime = 0;

    if (conf.getBoolean(DFS_DATATRANSFER_CLIENT_VARIABLEWHITELIST_ENABLE, false)) {
      variableFile = conf.get(DFS_DATATRANSFER_CLIENT_VARIABLEWHITELIST_FILE,variableFile);
      expiryTime =
        conf.getLong(DFS_DATATRANSFER_CLIENT_VARIABLEWHITELIST_CACHE_SECS,3600) * 1000;
    }

    whitelistForClient = new CombinedIPWhiteList(fixedFile,variableFile,expiryTime);
  }



====================ctx:=======================
