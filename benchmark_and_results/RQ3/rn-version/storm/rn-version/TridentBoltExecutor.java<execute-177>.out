====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	TridentBoltExecutor.java	methodSinagture:	org.apache.storm.trident.topology.TridentBoltExecutor.execute(Lorg/apache/storm/tuple/Tuple;)V	methodLines:	177:249
blockLines:	187:-1
paras:	null
TaintedStat:	NORMAL execute:conditional branch(ne, to iindex=47) 12,13 Node: < Application, Lorg/apache/storm/trident/topology/TridentBoltExecutor, execute(Lorg/apache/storm/tuple/Tuple;)V > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/storm/trident/topology/TridentBoltExecutor, execute(Lorg/apache/storm/tuple/Tuple;)V > Context: Everywhere[27]11 = invokeinterface < Application, Ljava/util/Map, get(Ljava/lang/Object;)Ljava/lang/Object; > 7,9 @49 exception:10
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/storm/trident/topology/TridentBoltExecutor, execute(Lorg/apache/storm/tuple/Tuple;)V > Context: Everywhere[27]11 = invokeinterface < Application, Ljava/util/Map, get(Ljava/lang/Object;)Ljava/lang/Object; > 7,9 @49 exception:10
NORMAL execute:12 = checkcast <Application,Ljava/lang/String>11 <Application,Ljava/lang/String> Node: < Application, Lorg/apache/storm/trident/topology/TridentBoltExecutor, execute(Lorg/apache/storm/tuple/Tuple;)V > Context: Everywhere
NORMAL execute:conditional branch(ne, to iindex=47) 12,13 Node: < Application, Lorg/apache/storm/trident/topology/TridentBoltExecutor, execute(Lorg/apache/storm/tuple/Tuple;)V > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
    public void execute(Tuple tuple) {
        if (TupleUtils.isTick(tuple)) {
            long now = System.currentTimeMillis();
            if (now - lastRotate > messageTimeoutMs) {
                batches.rotate();
                lastRotate = now;
            }
            return;
        }
        String batchGroup = batchGroupIds.get(tuple.getSourceGlobalStreamId());
        if (batchGroup == null) {
            // this is so we can do things like have simple DRPC that doesn't need to use batch processing
            coordCollector.setCurrBatch(null);
            bolt.execute(null, tuple);
            collector.ack(tuple);
            return;
        }
        IBatchID id = (IBatchID) tuple.getValue(0);
        //get transaction id
        //if it already exists and attempt id is greater than the attempt there

        TrackedBatch tracked = (TrackedBatch) batches.get(id.getId());

        // this code here ensures that only one attempt is ever tracked for a batch, so when
        // failures happen you don't get an explosion in memory usage in the tasks
        if (tracked != null) {
            if (id.getAttemptId() > tracked.attemptId) {
                batches.remove(id.getId());
                tracked = null;
            } else if (id.getAttemptId() < tracked.attemptId) {
                // no reason to try to execute a previous attempt than we've already seen
                return;
            }
        }

        if (tracked == null) {
            tracked =
                new TrackedBatch(new BatchInfo(batchGroup, id, bolt.initBatchState(batchGroup, id)), coordConditions.get(batchGroup),
                                 id.getAttemptId());
            batches.put(id.getId(), tracked);
        }
        coordCollector.setCurrBatch(tracked);

        //System.out.println("TRACKED: " + tracked + " " + tuple);

        TupleType t = getTupleType(tuple, tracked);
        if (t == TupleType.COMMIT) {
            tracked.receivedCommit = true;
            checkFinish(tracked, tuple, t);
        } else if (t == TupleType.COORD) {
            int count = tuple.getInteger(1);
            tracked.reportedTasks++;
            tracked.expectedTupleCount += count;
            checkFinish(tracked, tuple, t);
        } else {
            tracked.receivedTuples++;
            boolean success = true;
            try {
                bolt.execute(tracked.info, tuple);
                if (tracked.condition.expectedTaskReports == 0) {
                    success = finishBatch(tracked, tuple);
                }
            } catch (FailedException e) {
                failBatch(tracked, e);
            }
            if (success) {
                collector.ack(tuple);
            } else {
                collector.fail(tuple);
            }
        }
        coordCollector.setCurrBatch(null);
    }



====================ctx:=======================
