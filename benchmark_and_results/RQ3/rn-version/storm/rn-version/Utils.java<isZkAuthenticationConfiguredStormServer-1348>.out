====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	Utils.java	methodSinagture:	org.apache.storm.utils.Utils.isZkAuthenticationConfiguredStormServer(Ljava/util/Map;)Z	methodLines:	1348:1349
blockLines:	1351:-1
paras:	null
TaintedStat:	NORMAL isZkAuthenticationConfiguredStormServer:conditional branch(eq, to iindex=21) 9,3 Node: < Application, Lorg/apache/storm/utils/Utils, isZkAuthenticationConfiguredStormServer(Ljava/util/Map;)Z > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/storm/utils/Utils, isZkAuthenticationConfiguredStormServer(Ljava/util/Map;)Z > Context: Everywhere[9]9 = invokeinterface < Application, Ljava/util/Map, get(Ljava/lang/Object;)Ljava/lang/Object; > 1,7 @18 exception:8
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/storm/utils/Utils, isZkAuthenticationConfiguredStormServer(Ljava/util/Map;)Z > Context: Everywhere[9]9 = invokeinterface < Application, Ljava/util/Map, get(Ljava/lang/Object;)Ljava/lang/Object; > 1,7 @18 exception:8
NORMAL isZkAuthenticationConfiguredStormServer:conditional branch(eq, to iindex=21) 9,3 Node: < Application, Lorg/apache/storm/utils/Utils, isZkAuthenticationConfiguredStormServer(Ljava/util/Map;)Z > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
    public static boolean isZkAuthenticationConfiguredStormServer(Map<String, Object> conf) {
        return null != System.getProperty("java.security.auth.login.config")
               || (conf != null


====================ctx:=======================
CtxCodeBlock{node=Node: < Application, Lorg/apache/storm/cluster/DaemonType, getDefaultNimbusSupervisorZkAcls(Ljava/util/Map;)Ljava/util/List; > Context: Everywhere, blocks=[BB[SSA:0..1]1 - org.apache.storm.cluster.DaemonType.getDefaultNimbusSupervisorZkAcls(Ljava/util/Map;)Ljava/util/List;, BB[SSA:-1..-2]0 - org.apache.storm.cluster.DaemonType.getDefaultNimbusSupervisorZkAcls(Ljava/util/Map;)Ljava/util/List;, BB[SSA:2..3]2 - org.apache.storm.cluster.DaemonType.getDefaultNimbusSupervisorZkAcls(Ljava/util/Map;)Ljava/util/List;, BB[SSA:-1..-2]5 - org.apache.storm.cluster.DaemonType.getDefaultNimbusSupervisorZkAcls(Ljava/util/Map;)Ljava/util/List;], numberOfBasicBlocks=4, firstLineNumber=82, lastLineNumber=83, firstMethodNumber=82, lastMethodNumber=86, isFirstLineValid=false, methodSrcCode=
    private static List<ACL> getDefaultNimbusSupervisorZkAcls(Map<String, Object> conf) {
        if (Utils.isZkAuthenticationConfiguredStormServer(conf)) {
            return NIMBUS_SUPERVISOR_ZK_ACLS;
        }
        return null;
    }
}
CtxCodeBlock{node=Node: < Application, Lorg/apache/storm/security/auth/ClientAuthUtils, willWorkerTokensBeStoredSecurely(Ljava/util/Map;)Z > Context: Everywhere, blocks=[BB[SSA:5..7]3 - org.apache.storm.security.auth.ClientAuthUtils.willWorkerTokensBeStoredSecurely(Ljava/util/Map;)Z, BB[SSA:3..4]2 - org.apache.storm.security.auth.ClientAuthUtils.willWorkerTokensBeStoredSecurely(Ljava/util/Map;)Z, BB[SSA:8..9]4 - org.apache.storm.security.auth.ClientAuthUtils.willWorkerTokensBeStoredSecurely(Ljava/util/Map;)Z, BB[SSA:-1..-2]10 - org.apache.storm.security.auth.ClientAuthUtils.willWorkerTokensBeStoredSecurely(Ljava/util/Map;)Z], numberOfBasicBlocks=4, firstLineNumber=348, lastLineNumber=349, firstMethodNumber=347, lastMethodNumber=355, isFirstLineValid=true, methodSrcCode=
    private static boolean willWorkerTokensBeStoredSecurely(Map<String, Object> conf) {
        boolean overrideZkAuth = ObjectReader.getBoolean(conf.get("TESTING.ONLY.ENABLE.INSECURE.WORKER.TOKENS"), false);
        if (Utils.isZkAuthenticationConfiguredStormServer(conf)) {
            return true;
        } else if (overrideZkAuth) {
            LOG.error("\n\n\t\tYOU HAVE ENABLED INSECURE WORKER TOKENS.  IF THIS IS NOT A UNIT TEST PLEASE STOP NOW!!!\n\n");
            return true;
        }
        return false;
    }
}
