====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	Utils.java	methodSinagture:	org.apache.storm.utils.Utils.getSuperUserAcl(Ljava/util/Map;)Lorg/apache/storm/shade/org/apache/zookeeper/data/ACL;	methodLines:	602:607
blockLines:	604:-1
paras:	null
TaintedStat:	NORMAL getSuperUserAcl:conditional branch(ne, to iindex=13) 6,7 Node: < Application, Lorg/apache/storm/utils/Utils, getSuperUserAcl(Ljava/util/Map;)Lorg/apache/storm/shade/org/apache/zookeeper/data/ACL; > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/storm/utils/Utils, getSuperUserAcl(Ljava/util/Map;)Lorg/apache/storm/shade/org/apache/zookeeper/data/ACL; > Context: Everywhere[2]5 = invokeinterface < Application, Ljava/util/Map, get(Ljava/lang/Object;)Ljava/lang/Object; > 1,3 @4 exception:4
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/storm/utils/Utils, getSuperUserAcl(Ljava/util/Map;)Lorg/apache/storm/shade/org/apache/zookeeper/data/ACL; > Context: Everywhere[2]5 = invokeinterface < Application, Ljava/util/Map, get(Ljava/lang/Object;)Ljava/lang/Object; > 1,3 @4 exception:4
NORMAL getSuperUserAcl:6 = checkcast <Application,Ljava/lang/String>5 <Application,Ljava/lang/String> Node: < Application, Lorg/apache/storm/utils/Utils, getSuperUserAcl(Ljava/util/Map;)Lorg/apache/storm/shade/org/apache/zookeeper/data/ACL; > Context: Everywhere
NORMAL getSuperUserAcl:conditional branch(ne, to iindex=13) 6,7 Node: < Application, Lorg/apache/storm/utils/Utils, getSuperUserAcl(Ljava/util/Map;)Lorg/apache/storm/shade/org/apache/zookeeper/data/ACL; > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
    public static ACL getSuperUserAcl(Map<String, Object> conf) {
        String stormZKUser = (String) conf.get(Config.STORM_ZOOKEEPER_SUPERACL);
        if (stormZKUser == null) {
            throw new IllegalArgumentException("Authentication is enabled but " + Config.STORM_ZOOKEEPER_SUPERACL + " is not set");
        }
        return new ACL(ZooDefs.Perms.ALL, parseZkId(stormZKUser, Config.STORM_ZOOKEEPER_SUPERACL));
    }


====================ctx:=======================
CtxCodeBlock{node=Node: < Application, Lorg/apache/storm/utils/Utils, getWorkerACL(Ljava/util/Map;)Ljava/util/List; > Context: Everywhere, blocks=[BB[SSA:10..13]6 - org.apache.storm.utils.Utils.getWorkerACL(Ljava/util/Map;)Ljava/util/List;, BB[SSA:7..9]5 - org.apache.storm.utils.Utils.getWorkerACL(Ljava/util/Map;)Ljava/util/List;, BB[SSA:14..14]7 - org.apache.storm.utils.Utils.getWorkerACL(Ljava/util/Map;)Ljava/util/List;, BB[SSA:-1..-2]9 - org.apache.storm.utils.Utils.getWorkerACL(Ljava/util/Map;)Ljava/util/List;], numberOfBasicBlocks=4, firstLineNumber=621, lastLineNumber=622, firstMethodNumber=617, lastMethodNumber=623, isFirstLineValid=true, methodSrcCode=
    public static List<ACL> getWorkerACL(Map<String, Object> conf) {
        if (!isZkAuthenticationConfiguredTopology(conf)) {
            return null;
        }
        ArrayList<ACL> ret = new ArrayList<>(ZooDefs.Ids.CREATOR_ALL_ACL);
        ret.add(getSuperUserAcl(conf));
        return ret;
    }
}
