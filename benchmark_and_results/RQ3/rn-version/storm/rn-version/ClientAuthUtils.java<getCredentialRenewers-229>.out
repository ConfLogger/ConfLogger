====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	ClientAuthUtils.java	methodSinagture:	org.apache.storm.security.auth.ClientAuthUtils.getCredentialRenewers(Ljava/util/Map;)Ljava/util/Collection;	methodLines:	229:241
blockLines:	232:-1
paras:	null
TaintedStat:	NORMAL getCredentialRenewers:conditional branch(eq, to iindex=35) 8,9 Node: < Application, Lorg/apache/storm/security/auth/ClientAuthUtils, getCredentialRenewers(Ljava/util/Map;)Ljava/util/Collection; > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/storm/security/auth/ClientAuthUtils, getCredentialRenewers(Ljava/util/Map;)Ljava/util/Collection; > Context: Everywhere[6]7 = invokeinterface < Application, Ljava/util/Map, get(Ljava/lang/Object;)Ljava/lang/Object; > 1,5 @11 exception:6
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/storm/security/auth/ClientAuthUtils, getCredentialRenewers(Ljava/util/Map;)Ljava/util/Collection; > Context: Everywhere[6]7 = invokeinterface < Application, Ljava/util/Map, get(Ljava/lang/Object;)Ljava/lang/Object; > 1,5 @11 exception:6
NORMAL getCredentialRenewers:8 = checkcast <Application,Ljava/util/Collection>7 <Application,Ljava/util/Collection> Node: < Application, Lorg/apache/storm/security/auth/ClientAuthUtils, getCredentialRenewers(Ljava/util/Map;)Ljava/util/Collection; > Context: Everywhere
NORMAL getCredentialRenewers:conditional branch(eq, to iindex=35) 8,9 Node: < Application, Lorg/apache/storm/security/auth/ClientAuthUtils, getCredentialRenewers(Ljava/util/Map;)Ljava/util/Collection; > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
        try {
            Set<ICredentialsRenewer> ret = new HashSet<>();
            Collection<String> clazzes = (Collection<String>) conf.get(Config.NIMBUS_CREDENTIAL_RENEWERS);
            if (clazzes != null) {
                for (String clazz : clazzes) {
                    ICredentialsRenewer inst = ReflectionUtils.newInstance(clazz);
                    inst.prepare(conf);
                    ret.add(inst);
                }
            }
            return ret;
        } catch (Exception e) {
            throw new RuntimeException(e);
        }


====================ctx:=======================
