====================TaintedSinkInfo:=======================
-------------TaintedSinkInfo----------
fileName:	WatchManagerFactory.java	methodSinagture:	org.apache.zookeeper.server.watch.WatchManagerFactory.createWatchManager()Lorg/apache/zookeeper/server/watch/IWatchManager;	methodLines:	35:46
blockLines:	37:-1
paras:	null
TaintedStat:	NORMAL createWatchManager:conditional branch(ne, to iindex=9) 4,5 Node: < Application, Lorg/apache/zookeeper/server/watch/WatchManagerFactory, createWatchManager()Lorg/apache/zookeeper/server/watch/IWatchManager; > Context: Everywhere
Source:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/zookeeper/server/watch/WatchManagerFactory, createWatchManager()Lorg/apache/zookeeper/server/watch/IWatchManager; > Context: Everywhere[1]4 = invokestatic < Application, Ljava/lang/System, getProperty(Ljava/lang/String;)Ljava/lang/String; > 2 @2 exception:3
Tainted Path:	NORMAL_RET_CALLER:Node: < Application, Lorg/apache/zookeeper/server/watch/WatchManagerFactory, createWatchManager()Lorg/apache/zookeeper/server/watch/IWatchManager; > Context: Everywhere[1]4 = invokestatic < Application, Ljava/lang/System, getProperty(Ljava/lang/String;)Ljava/lang/String; > 2 @2 exception:3
NORMAL createWatchManager:conditional branch(ne, to iindex=9) 4,5 Node: < Application, Lorg/apache/zookeeper/server/watch/WatchManagerFactory, createWatchManager()Lorg/apache/zookeeper/server/watch/IWatchManager; > Context: Everywhere



====================ExtendedBlocks:=======================


====================MethodSrc:=======================
    public static IWatchManager createWatchManager() throws IOException {
        String watchManagerName = System.getProperty(ZOOKEEPER_WATCH_MANAGER_NAME);
        if (watchManagerName == null) {
            watchManagerName = WatchManager.class.getName();
        }
        try {
            IWatchManager watchManager = (IWatchManager) Class.forName(watchManagerName).getConstructor().newInstance();
            LOG.info("Using {} as watch manager", watchManagerName);
            return watchManager;
        } catch (Exception e) {
            IOException ioe = new IOException("Couldn't instantiate " + watchManagerName, e);
            throw ioe;
        }


====================ctx:=======================
CtxCodeBlock{node=Node: < Application, Lorg/apache/zookeeper/server/DataTree, <init>(Lorg/apache/zookeeper/server/DigestCalculator;)V > Context: Everywhere, blocks=[BB[SSA:148..149]78 - org.apache.zookeeper.server.DataTree.<init>(Lorg/apache/zookeeper/server/DigestCalculator;)V, BB[SSA:147..147]77 - org.apache.zookeeper.server.DataTree.<init>(Lorg/apache/zookeeper/server/DigestCalculator;)V, BB[SSA:150..150]79 - org.apache.zookeeper.server.DataTree.<init>(Lorg/apache/zookeeper/server/DigestCalculator;)V, BB[SSA:-1..-2]87 - org.apache.zookeeper.server.DataTree.<init>(Lorg/apache/zookeeper/server/DigestCalculator;)V, BB[SSA:151..152]80 - org.apache.zookeeper.server.DataTree.<init>(Lorg/apache/zookeeper/server/DigestCalculator;)V, BB[SSA:150..150]79 - org.apache.zookeeper.server.DataTree.<init>(Lorg/apache/zookeeper/server/DigestCalculator;)V, BB[SSA:153..153]81 - org.apache.zookeeper.server.DataTree.<init>(Lorg/apache/zookeeper/server/DigestCalculator;)V, BB[SSA:-1..-2]87 - org.apache.zookeeper.server.DataTree.<init>(Lorg/apache/zookeeper/server/DigestCalculator;)V], numberOfBasicBlocks=8, firstLineNumber=302, lastLineNumber=303, firstMethodNumber=282, lastMethodNumber=308, isFirstLineValid=true, methodSrcCode=

    DataTree(DigestCalculator digestCalculator) {
        this.digestCalculator = digestCalculator;
        nodes = new NodeHashMapImpl(digestCalculator);

        // rather than fight it, let root have an alias
        nodes.put("", root);
        nodes.putWithoutDigest(rootZookeeper, root);

        // add the proc node and quota node
        root.addChild(procChildZookeeper);
        nodes.put(procZookeeper, procDataNode);

        procDataNode.addChild(quotaChildZookeeper);
        nodes.put(quotaZookeeper, quotaDataNode);

        addConfigNode();

        nodeDataSize.set(approximateDataSize());
        try {
            dataWatches = WatchManagerFactory.createWatchManager();
            childWatches = WatchManagerFactory.createWatchManager();
        } catch (Exception e) {
            LOG.error("Unexpected exception when creating WatchManager, exiting abnormally", e);
            ServiceUtils.requestSystemExit(ExitCode.UNEXPECTED_ERROR.getValue());
        }
    }

}
