select <line#> and insert log level and Log verbosity message after <line#>

Query: Target method code:
<Line#0>int maxRetry = getConf().getInt(MRJobConfig.MR_CLIENT_JOB_MAX_RETRIES,
<Line#1>MRJobConfig.DEFAULT_MR_CLIENT_JOB_MAX_RETRIES);
<Line#2>long retryInterval = getConf()
<Line#3>.getLong(MRJobConfig.MR_CLIENT_JOB_RETRY_INTERVAL,
<Line#4>MRJobConfig.DEFAULT_MR_CLIENT_JOB_RETRY_INTERVAL);
<Line#5>Job job = cluster.getJob(jobid);
<Line#6>
<Line#7>for (int i = 0; i < maxRetry; ++i) {
<Line#8>if (job != null) {
<Line#9>return job;
<Line#10>}
<Line#11>Thread.sleep(retryInterval);
<Line#12>job = cluster.getJob(jobid);
<Line#13>}
<Line#14>return job;
<Line#15>}

Example 1:
<Line#1>{
<Line#2>  String lastReport=null;
<Line#3>  Job.TaskStatusFilter filter;
<Line#4>  Configuration clientConf=getConfiguration();
<Line#5>  filter=Job.getTaskOutputFilter(clientConf);
<Line#6>  JobID jobId=getJobID();
<Line#7>  LOG.info("Running job: " + jobId);
<Line#8>  int eventCounter=0;
<Line#9>  boolean profiling=getProfileEnabled();
<Line#10>  IntegerRanges mapRanges=getProfileTaskRange(true);
<Line#11>  IntegerRanges reduceRanges=getProfileTaskRange(false);
<Line#12>  int progMonitorPollIntervalMillis=Job.getProgressPollInterval(clientConf);
<Line#13>  boolean reportedAfterCompletion=false;
<Line#14>  boolean reportedUberMode=false;
<Line#15>  while (!isComplete() || !reportedAfterCompletion) {
<Line#16>    if (isComplete()) {
<Line#17>      reportedAfterCompletion=true;
<Line#18>    }
<Line#19> else {
<Line#20>      Thread.sleep(progMonitorPollIntervalMillis);
<Line#21>    }
<Line#22>    if (status.getState() == JobStatus.State.PREP) {
<Line#23>      continue;
<Line#24>    }
<Line#25>    if (!reportedUberMode) {
<Line#26>      reportedUberMode=true;
<Line#27>      LOG.info("Job " + jobId + " running in uber mode : "+ isUber());
<Line#28>    }
<Line#29>    String report=(" map " + StringUtils.formatPercent(mapProgress(),0) + " reduce "+ StringUtils.formatPercent(reduceProgress(),0));
<Line#30>    if (!report.equals(lastReport)) {
<Line#31>      LOG.info(report);
<Line#32>      lastReport=report;
<Line#33>    }
<Line#34>    TaskCompletionEvent[] events=getTaskCompletionEvents(eventCounter,10);
<Line#35>    eventCounter+=events.length;
<Line#36>    printTaskEvents(events,filter,profiling,mapRanges,reduceRanges);
<Line#37>  }
<Line#38>  boolean success=isSuccessful();
<Line#39>  if (success) {
<Line#40>    LOG.info("Job " + jobId + " completed successfully");
<Line#41>  }
<Line#42> else {
<Line#43>    LOG.info("Job " + jobId + " failed with state "+ status.getState()+ " due to: "+ status.getFailureInfo());
<Line#44>  }
<Line#45>  Counters counters=getCounters();
<Line#46>  if (counters != null) {
<Line#47>    LOG.info(counters.toString());
<Line#48>  }
<Line#49>  return success;
<Line#50>}
Label: <Line#7> LOG.info("Running job: " + jobId)

Example 2:
<Line#1>{
<Line#2>  String lastReport=null;
<Line#3>  Job.TaskStatusFilter filter;
<Line#4>  Configuration clientConf=getConfiguration();
<Line#5>  filter=Job.getTaskOutputFilter(clientConf);
<Line#6>  JobID jobId=getJobID();
<Line#7>  LOG.info("Running job: " + jobId);
<Line#8>  int eventCounter=0;
<Line#9>  boolean profiling=getProfileEnabled();
<Line#10>  IntegerRanges mapRanges=getProfileTaskRange(true);
<Line#11>  IntegerRanges reduceRanges=getProfileTaskRange(false);
<Line#12>  int progMonitorPollIntervalMillis=Job.getProgressPollInterval(clientConf);
<Line#13>  boolean reportedAfterCompletion=false;
<Line#14>  boolean reportedUberMode=false;
<Line#15>  while (!isComplete() || !reportedAfterCompletion) {
<Line#16>    if (isComplete()) {
<Line#17>      reportedAfterCompletion=true;
<Line#18>    }
<Line#19> else {
<Line#20>      Thread.sleep(progMonitorPollIntervalMillis);
<Line#21>    }
<Line#22>    if (status.getState() == JobStatus.State.PREP) {
<Line#23>      continue;
<Line#24>    }
<Line#25>    if (!reportedUberMode) {
<Line#26>      reportedUberMode=true;
<Line#27>      LOG.info("Job " + jobId + " running in uber mode : "+ isUber());
<Line#28>    }
<Line#29>    String report=(" map " + StringUtils.formatPercent(mapProgress(),0) + " reduce "+ StringUtils.formatPercent(reduceProgress(),0));
<Line#30>    if (!report.equals(lastReport)) {
<Line#31>      LOG.info(report);
<Line#32>      lastReport=report;
<Line#33>    }
<Line#34>    TaskCompletionEvent[] events=getTaskCompletionEvents(eventCounter,10);
<Line#35>    eventCounter+=events.length;
<Line#36>    printTaskEvents(events,filter,profiling,mapRanges,reduceRanges);
<Line#37>  }
<Line#38>  boolean success=isSuccessful();
<Line#39>  if (success) {
<Line#40>    LOG.info("Job " + jobId + " completed successfully");
<Line#41>  }
<Line#42> else {
<Line#43>    LOG.info("Job " + jobId + " failed with state "+ status.getState()+ " due to: "+ status.getFailureInfo());
<Line#44>  }
<Line#45>  Counters counters=getCounters();
<Line#46>  if (counters != null) {
<Line#47>    LOG.info(counters.toString());
<Line#48>  }
<Line#49>  return success;
<Line#50>}
Label: <Line#27> LOG.info("Job " + jobId + " running in uber mode : "+ isUber())

Example 3:
<Line#1>{
<Line#2>  String lastReport=null;
<Line#3>  Job.TaskStatusFilter filter;
<Line#4>  Configuration clientConf=getConfiguration();
<Line#5>  filter=Job.getTaskOutputFilter(clientConf);
<Line#6>  JobID jobId=getJobID();
<Line#7>  LOG.info("Running job: " + jobId);
<Line#8>  int eventCounter=0;
<Line#9>  boolean profiling=getProfileEnabled();
<Line#10>  IntegerRanges mapRanges=getProfileTaskRange(true);
<Line#11>  IntegerRanges reduceRanges=getProfileTaskRange(false);
<Line#12>  int progMonitorPollIntervalMillis=Job.getProgressPollInterval(clientConf);
<Line#13>  boolean reportedAfterCompletion=false;
<Line#14>  boolean reportedUberMode=false;
<Line#15>  while (!isComplete() || !reportedAfterCompletion) {
<Line#16>    if (isComplete()) {
<Line#17>      reportedAfterCompletion=true;
<Line#18>    }
<Line#19> else {
<Line#20>      Thread.sleep(progMonitorPollIntervalMillis);
<Line#21>    }
<Line#22>    if (status.getState() == JobStatus.State.PREP) {
<Line#23>      continue;
<Line#24>    }
<Line#25>    if (!reportedUberMode) {
<Line#26>      reportedUberMode=true;
<Line#27>      LOG.info("Job " + jobId + " running in uber mode : "+ isUber());
<Line#28>    }
<Line#29>    String report=(" map " + StringUtils.formatPercent(mapProgress(),0) + " reduce "+ StringUtils.formatPercent(reduceProgress(),0));
<Line#30>    if (!report.equals(lastReport)) {
<Line#31>      LOG.info(report);
<Line#32>      lastReport=report;
<Line#33>    }
<Line#34>    TaskCompletionEvent[] events=getTaskCompletionEvents(eventCounter,10);
<Line#35>    eventCounter+=events.length;
<Line#36>    printTaskEvents(events,filter,profiling,mapRanges,reduceRanges);
<Line#37>  }
<Line#38>  boolean success=isSuccessful();
<Line#39>  if (success) {
<Line#40>    LOG.info("Job " + jobId + " completed successfully");
<Line#41>  }
<Line#42> else {
<Line#43>    LOG.info("Job " + jobId + " failed with state "+ status.getState()+ " due to: "+ status.getFailureInfo());
<Line#44>  }
<Line#45>  Counters counters=getCounters();
<Line#46>  if (counters != null) {
<Line#47>    LOG.info(counters.toString());
<Line#48>  }
<Line#49>  return success;
<Line#50>}
Label: <Line#31> LOG.info(report)

Example 4:
<Line#1>{
<Line#2>  String lastReport=null;
<Line#3>  Job.TaskStatusFilter filter;
<Line#4>  Configuration clientConf=getConfiguration();
<Line#5>  filter=Job.getTaskOutputFilter(clientConf);
<Line#6>  JobID jobId=getJobID();
<Line#7>  LOG.info("Running job: " + jobId);
<Line#8>  int eventCounter=0;
<Line#9>  boolean profiling=getProfileEnabled();
<Line#10>  IntegerRanges mapRanges=getProfileTaskRange(true);
<Line#11>  IntegerRanges reduceRanges=getProfileTaskRange(false);
<Line#12>  int progMonitorPollIntervalMillis=Job.getProgressPollInterval(clientConf);
<Line#13>  boolean reportedAfterCompletion=false;
<Line#14>  boolean reportedUberMode=false;
<Line#15>  while (!isComplete() || !reportedAfterCompletion) {
<Line#16>    if (isComplete()) {
<Line#17>      reportedAfterCompletion=true;
<Line#18>    }
<Line#19> else {
<Line#20>      Thread.sleep(progMonitorPollIntervalMillis);
<Line#21>    }
<Line#22>    if (status.getState() == JobStatus.State.PREP) {
<Line#23>      continue;
<Line#24>    }
<Line#25>    if (!reportedUberMode) {
<Line#26>      reportedUberMode=true;
<Line#27>      LOG.info("Job " + jobId + " running in uber mode : "+ isUber());
<Line#28>    }
<Line#29>    String report=(" map " + StringUtils.formatPercent(mapProgress(),0) + " reduce "+ StringUtils.formatPercent(reduceProgress(),0));
<Line#30>    if (!report.equals(lastReport)) {
<Line#31>      LOG.info(report);
<Line#32>      lastReport=report;
<Line#33>    }
<Line#34>    TaskCompletionEvent[] events=getTaskCompletionEvents(eventCounter,10);
<Line#35>    eventCounter+=events.length;
<Line#36>    printTaskEvents(events,filter,profiling,mapRanges,reduceRanges);
<Line#37>  }
<Line#38>  boolean success=isSuccessful();
<Line#39>  if (success) {
<Line#40>    LOG.info("Job " + jobId + " completed successfully");
<Line#41>  }
<Line#42> else {
<Line#43>    LOG.info("Job " + jobId + " failed with state "+ status.getState()+ " due to: "+ status.getFailureInfo());
<Line#44>  }
<Line#45>  Counters counters=getCounters();
<Line#46>  if (counters != null) {
<Line#47>    LOG.info(counters.toString());
<Line#48>  }
<Line#49>  return success;
<Line#50>}
Label: <Line#40> LOG.info("Job " + jobId + " completed successfully")

Example 5:
<Line#1>{
<Line#2>  String lastReport=null;
<Line#3>  Job.TaskStatusFilter filter;
<Line#4>  Configuration clientConf=getConfiguration();
<Line#5>  filter=Job.getTaskOutputFilter(clientConf);
<Line#6>  JobID jobId=getJobID();
<Line#7>  LOG.info("Running job: " + jobId);
<Line#8>  int eventCounter=0;
<Line#9>  boolean profiling=getProfileEnabled();
<Line#10>  IntegerRanges mapRanges=getProfileTaskRange(true);
<Line#11>  IntegerRanges reduceRanges=getProfileTaskRange(false);
<Line#12>  int progMonitorPollIntervalMillis=Job.getProgressPollInterval(clientConf);
<Line#13>  boolean reportedAfterCompletion=false;
<Line#14>  boolean reportedUberMode=false;
<Line#15>  while (!isComplete() || !reportedAfterCompletion) {
<Line#16>    if (isComplete()) {
<Line#17>      reportedAfterCompletion=true;
<Line#18>    }
<Line#19> else {
<Line#20>      Thread.sleep(progMonitorPollIntervalMillis);
<Line#21>    }
<Line#22>    if (status.getState() == JobStatus.State.PREP) {
<Line#23>      continue;
<Line#24>    }
<Line#25>    if (!reportedUberMode) {
<Line#26>      reportedUberMode=true;
<Line#27>      LOG.info("Job " + jobId + " running in uber mode : "+ isUber());
<Line#28>    }
<Line#29>    String report=(" map " + StringUtils.formatPercent(mapProgress(),0) + " reduce "+ StringUtils.formatPercent(reduceProgress(),0));
<Line#30>    if (!report.equals(lastReport)) {
<Line#31>      LOG.info(report);
<Line#32>      lastReport=report;
<Line#33>    }
<Line#34>    TaskCompletionEvent[] events=getTaskCompletionEvents(eventCounter,10);
<Line#35>    eventCounter+=events.length;
<Line#36>    printTaskEvents(events,filter,profiling,mapRanges,reduceRanges);
<Line#37>  }
<Line#38>  boolean success=isSuccessful();
<Line#39>  if (success) {
<Line#40>    LOG.info("Job " + jobId + " completed successfully");
<Line#41>  }
<Line#42> else {
<Line#43>    LOG.info("Job " + jobId + " failed with state "+ status.getState()+ " due to: "+ status.getFailureInfo());
<Line#44>  }
<Line#45>  Counters counters=getCounters();
<Line#46>  if (counters != null) {
<Line#47>    LOG.info(counters.toString());
<Line#48>  }
<Line#49>  return success;
<Line#50>}
Label: <Line#43> LOG.info("Job " + jobId + " failed with state "+ status.getState()+ " due to: "+ status.getFailureInfo())

